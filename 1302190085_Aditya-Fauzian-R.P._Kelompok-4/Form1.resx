<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWgAAABOCAYAAAANZ4xKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAA09JREFUeF7t3L1qU2EYwPFcQi+hgx8tfqVJBRehm4tCB0FBh4KbDhad3FonnRoQ
        axetu4Ob4JTRURA6O3gBpVdwPE9MaXJyEmmb6IP+XviBPW9qM/15eXJOGsWbdlH15dnlnro9AKZnUm8F
        GuAvEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhK
        oAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhK
        oAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkhK
        oAGSEmiApAQaICmBBkhKoAGSEmiApAQaICmBBkjqN4Fufa9eFGiAP2NCb783ip32x+rG3uaV4vOTS0PX
        AJi+CYHuxgm6U9348WKp+PDwwtA1AKbv7YMLxcHWUs1eq1MGenlldKNdbN1bHLkGwHSNbe12e7VRbDXn
        yn/sVzcFGmD2xrR2v3G4iu2l99UXxC/VH7sBmIaDTmtcoHf7eS4DXTPmiKG1OTTA7Hx4eLHY27gyuvdq
        eaWf51+r2Gl3qy8y5gCYnee3F+qud/tZPlrF66vN6guj7mNu/wDgFH68aPYaO7rXnO9neXiVmyO33D29
        eX7oZwBOr3ZC8Xp5o5/j+lXstL8O/sKEm6gBOIF4EHDk9Fy2t5/h8SuO19XHv2NO4o4OgNOL0cbo6Tma
        O2a0UV3VSMetIJv1w2wAjiEOvPG09tG1Y8T5cFUjHf/huwduuwM4qRhrDMW5N1I+ZpwPV+8pw4EPDvc2
        x33qCMAk8Z0b0dCBa51itznXz+3JVzwTfniajvrHuCPmKAN/CIAa8fnd0Fijd2quPIgyjVVGei0eaIk/
        FENuX0kKMF7cARcH2oOtVvzc7X0B0qxXbz693Vrv3F/svryzuO80DXAkwvzoxrn9T48vllFurRdvrp1s
        zjyNNT8/v3b3+pnus9WF9982mqu/vtsD4P8R7YsG3rp2djea2M9jnlW+qWZpY8B6aQXgH7RaWisNNm/6
        s+VZrfLNzsUbBvgHxYF0hqOLRuMnW1mBsdHMtqcAAAAASUVORK5CYII=
</value>
  </data>
</root>